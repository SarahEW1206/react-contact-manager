{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/NotFound.js","components/contacts/AboutContact.js","components/pages/About.js","components/pages/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","map","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updatedContact","console","log","put","alert","match","params","Header","branding","NotFound","AboutContact","filtered","person","toString","pages_NotFound","About","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","basename","process","layout_Header","Switch","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c46e21fa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [\n          {\n            ...action.payload\n          },\n          ...state.contacts\n        ]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: [\n          action.payload,\n          ...state.contacts.filter(contact => contact.id !== action.payload.id)\n        ]\n        //Below is how it's done in the video, this will not change the order like it does above. Depends what you want.\n        // contacts: state.contacts.map(contact => contact.id===action.payload.id ? (contact = action.payload) : contact)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"http://jsonplaceholder.typicode.com/users\");\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  //DON'T NEED TO DO ALL THIS IF WE MAKE THE FUNCTION AN ARROW FUNCTION.\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     clicked: true\n  //   };\n\n  //   this.onShowClick = this.onShowClick.bind(this);\n  // }\n\n  state = {\n    showContactInfo: false\n  };\n\n  onShowClick = () => {\n    //Niiiiceee.\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`http://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (error) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    //This is called destructuring!\n    const { name, email, phone, id } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={this.onShowClick}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      marginRight: \"20px\",\n                      color: \"gray\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo && (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">{phone}</li>\n                  <li className=\"list-group-item\">{email}</li>\n                </ul>\n              )}\n              <Link to={`/contact/${id}`}>More Info</Link>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\nimport { Link } from \"react-router-dom\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n              <p>\n                <Link to={\"/contact/add\"}>Add a contact.</Link>\n              </p>\n              <p>\n                <Link to={\"/about\"}>About this app.</Link>\n              </p>\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div>\n      <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <input\n          type={type}\n          name={name}\n          className={\n            error\n              ? \"is-invalid form-control form-control-lg\"\n              : \"form-control form-control-lg\"\n          }\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n      </div>\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    let errors = {};\n\n    //Check for errors\n    if (name === \"\" || email === \"\" || phone === \"\") {\n      if (name === \"\") {\n        errors.name = \"Name is required.\";\n      }\n      if (email === \"\") {\n        errors.email = \"Email is required.\";\n      }\n      if (phone === \"\") {\n        errors.phone = \"Phone is required.\";\n      }\n      this.setState({ errors });\n    } else {\n      //Make the post request\n\n      const newContact = {\n        name,\n        email,\n        phone\n      };\n\n      const res = await axios.post(\n        \"http://jsonplaceholder.typicode.com/users\",\n        newContact\n      );\n\n      dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n      //Clear state (inputs) after submit\n      this.setState({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        errors: {}\n      });\n\n      this.props.history.push(\"/\");\n    }\n  };\n\n  render() {\n    const { name, phone, email, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-block btn-dark\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `http://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n\n    this.setState({\n      id: contact.id,\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { id, name, email, phone } = this.state;\n\n    let errors = {};\n\n    //It works to just pass state into the PUT request, but this eliminates the extra data we don't have to pass through (id, which stays the same, and errors).\n    let updatedContact = {\n      name,\n      email,\n      phone\n    };\n\n    console.log(updatedContact);\n    console.log(this.state);\n\n    //Check for errors\n    //If ANY field is empty, go on to each field and if that field is empty, update the errors object with the respective error string.\n    if (name === \"\" || email === \"\" || phone === \"\") {\n      if (name === \"\") {\n        errors.name = \"Name is required.\";\n      }\n      if (email === \"\") {\n        errors.email = \"Email is required.\";\n      }\n      if (phone === \"\") {\n        errors.phone = \"Phone is required.\";\n      }\n      //If any errors above, they will get pushed to the errors array, then we set errors in the state to the array.\n      this.setState({ errors });\n    } else {\n      //If no errors, make the put request (using async await; sending through the updatedContact object)...\n      try {\n        const res = await axios.put(\n          `http://jsonplaceholder.typicode.com/users/${id}`,\n          updatedContact\n        );\n        //...and dispatch the update function with payload of response data from the PUT.\n        dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n      } catch (error) {\n        alert(\"Contact not found in database. \" + error);\n      }\n\n      //Clear state (inputs) after submit\n      this.setState({\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        errors: {}\n      });\n\n      //Redirect user back to the main page WITHOUT refreshing the app.\n      this.props.history.push(\"/\");\n    }\n  };\n\n  render() {\n    const { name, phone, email, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-block btn-dark\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py--0\">\n      <div className=\"container\">\n        <Link to={\"/\"} className=\"navbar-brand\">\n          {branding}\n        </Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/\"} className=\"nav-link\">\n                <i className=\"fas fa-home\" />\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/about\"} className=\"nav-link\">\n                <i className=\"fas fa-star\" />\n                About\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/contact/add\"} className=\"nav-link\">\n                <i className=\"fas fa-plus\" />\n                Add Contact\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"my app\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">Sorry, nothing here!</h1>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { Consumer } from \"../../context\";\n// import { Link } from \"react-router-dom\";\nimport NotFound from \"../pages/NotFound\";\n\nclass AboutContact extends React.Component {\n  render() {\n    const { id } = this.props.match.params;\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n\n          let filtered = contacts.filter(person => {\n            return person.id.toString() === id.toString();\n          });\n\n          console.log(id);\n\n          return (\n            <div>\n              {filtered.length > 0 ? (\n                filtered.map(contact => (\n                  <div>\n                    <h3>{contact.name}</h3>\n                    <p>{contact.phone}</p>\n                    <p>{contact.email}</p>\n                  </div>\n                ))\n              ) : (\n                <NotFound />\n              )}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AboutContact;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">This is a contact manager.</h1>\n      <p className=\"lead\">This is an app to manage contacts.</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n  }\n\n  render() {\n    const { title, body } = this.state;\n    console.log(\"Test has rendered.\");\n    return (\n      <div>\n        <h1 className=\"display-3\">{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport AboutContact from \"./components/contacts/AboutContact\";\nimport About from \"./components/pages/About\";\nimport Test from \"./components/pages/Test\";\nimport NotFound from \"./components/pages/NotFound\";\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route path=\"/contact/:id\" component={AboutContact} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}